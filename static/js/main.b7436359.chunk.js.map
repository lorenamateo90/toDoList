{"version":3,"sources":["components/Todo.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","index","deleteTodo","className","onClick","Form","useState","setTodo","todos","setTodos","indice","newTodos","splice","onSubmit","e","preventDefault","type","name","onChange","target","value","Object","keys","length","trim","alert","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAaeA,EAVF,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,WACxB,OACI,mCACE,sBAAKC,UAAU,OAAf,UACM,6BAAKH,IADX,IACsB,wBAAQG,UAAU,aAAaC,QAAS,kBAAMF,EAAWD,IAAzD,qBCoCjBI,EAvCF,WACT,MAAwBC,mBAAS,IAAjC,mBAAON,EAAP,KAAaO,EAAb,KACA,EAA0BD,mBAAS,CAC/B,CAACN,KAAM,QACP,CAACA,KAAM,QACP,CAACA,KAAM,UAHX,mBAAOQ,EAAP,KAAcC,EAAd,KAeMP,EAAa,SAAAQ,GACf,IAAMC,EAAQ,YAAOH,GACrBG,EAASC,OAAOF,EAAQ,GACxBD,EAASE,IAGb,OACI,qCACE,uBAAME,SAAU,SAAAC,GAAC,OAAIA,EAAEC,kBAAvB,UACM,kDAA4B,uBAC5B,uBAAOC,KAAK,OAAOC,KAAK,OAAOC,SAnBtB,SAAAJ,GAAC,OAAIP,EAAQ,eAAEO,EAAEK,OAAOF,KAAOH,EAAEK,OAAOC,WAoBjD,wBAAQhB,QAnBA,SAAAU,GACgB,IAA7BO,OAAOC,KAAKtB,GAAMuB,QAAqC,KAArBvB,EAAKA,KAAKwB,OAI/Cf,EAAS,GAAD,mBAAKD,GAAL,CAAYR,KAHhByB,MAAM,kCAiBF,oBAGDjB,EAAMkB,KAAI,SAACN,EAAOnB,GAAR,OACT,cAAC,EAAD,CAAMD,KAAMoB,EAAMpB,KAAkBC,MAAOA,EAAOC,WAAYA,GAAjCD,UCrB9B0B,EAXF,WAEX,OACE,qBAAKxB,UAAU,MAAf,SACE,qBAAKA,UAAU,cAAf,SACE,cAAC,EAAD,SCGOyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b7436359.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Todo = ({todo, index, deleteTodo}) => {\n    return (\n        <>\n          <div className=\"list\">\n                <h3>{todo}</h3> <button className=\"btn-delete\" onClick={() => deleteTodo(index)}>x</button>\n            </div>\n    </>\n    )\n}\n\nexport default Todo;","import React, {useState}  from 'react'\nimport Todo from './Todo'\n\n\nconst Form = () => {\n    const [todo, setTodo] = useState({})\n    const [todos, setTodos] = useState([\n        {todo: 'task'},\n        {todo: 'task'},\n        {todo: 'task'}\n    ])\n\n    const handleChange = e => setTodo({[e.target.name]: e.target.value})\n    const handleClick = e => {\n        if(Object.keys(todo).length === 0 || todo.todo.trim() === '') {\n            alert('el campo no puede estar vacio')\n            return\n        }\n        setTodos([...todos, todo])\n    }\n    \n    const deleteTodo = indice => {\n        const newTodos = [...todos]\n        newTodos.splice(indice, 1)\n        setTodos(newTodos)\n    }\n\n    return (\n        <>\n          <form onSubmit={e => e.preventDefault()}>\n                <label>add your task</label><br />\n                <input type=\"text\" name=\"todo\" onChange={handleChange}/>\n                <button onClick={handleClick}>add</button>\n            </form>\n           {\n               todos.map((value, index) => (\n                <Todo todo={value.todo} key={index} index={index} deleteTodo={deleteTodo}/>\n             ))\n            }\n    </>\n    )\n}\n\nexport default Form","import React from 'react';\nimport './App.css';\nimport Form from './components/Form';\n\nconst  App = () => {\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-content\">\n        <Form/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}